#!/bin/bash
shopt -s expand_aliases
green=`tput setaf 2;`
warn=`tput setaf 3`
err=`tput setaf 1`
reset=`tput sgr0`
USAGE="Usage: pdftex [-h] [-k] [<input file>]
where options include:
  -h
    Display this message
  -k
    Keep all auxillary output files latex produces instead of removing them
  -b <bibliography file>
    Use the specified bibliography file
  -c
    Use the current input file exclusively, do not search for a main file.
  <input file>
    The (optional) latex input file to compile (with or without extension)"
while getopts ":hkcb:" opt; do
  case ${opt} in
    h )
      echo "$USAGE"
      exit 0
      ;;
    b )
      bib="$OPTARG"
      if [ ! -f "$bib" ]; then
        echo "ERROR: Bibliography file \"$bib\" does not exist"
        echo "$USAGE"
        exit 1
      fi
      ;;
    k )
      keep=1
      ;;
    c )
      no_main=1
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done
shift $((OPTIND -1))
old=$1
if [ ! -v "no_main" ]; then
  while
    main="$(find $PWD -maxdepth 1 -name "*.latexmain" -printf "%f")"
    [ -z "$main" ] && [ "$PWD" != "/" ]; do
    cd ../
  done
  if [ -f "$main" ]; then
    echo "Found mainfile: $main"
    old="${main%.latexmain}"
  fi
fi
if [ -z "$old" ]; then
  echo "${err}ERROR: No TeX file given and no main file found! Exiting...${reset}"
  exit 1
fi
file=${old[@]//\.tex/}
alias color='sed "s/.*\(W\|w\)arning.*/${warn}&${reset}/" | sed "s/\!.*\|.*\(e\|E\)rror.*/${err}&${reset}/"'

remove_aux_files() {
  if [ ! -v keep ]; then # only remove if not to keep
    ls $file.* | grep -P $file'\.(?!tex|pdf|bib)' | xargs rm
  fi
}

# Step 1: Compile with latex
echo "${green}Step 1/4: running pdflatex${reset}"
save=$(texfot --ignore="Warning: (Citation|Reference)" pdflatex -interaction=nonstopmode $file)
if [ $? != 0 ]; then
  echo "$save" | color
  remove_aux_files
  exit 1
fi

# Step 2: Run bibtex (or use given bib file)
if [ -v bib ]; then
  echo "${green}Step 2/4: using specified bibliography file${reset}"
  cp "$bib" "$file.bbl"
else
  echo "${green}Step 2/4: running bibtex${reset}"
  if [ "$(echo "$save" | grep "[b\|B]iber")" ] && [ "$(biber --version)" ]; then
    texfot biber $file | color
  else
    texfot bibtex $file | color
  fi
fi

# Step 3: recompile with latex
echo "${green}Step 3/4: running pdflatex${reset}"
save=$(texfot --ignore="Warning: Citation" pdflatex -interaction=nonstopmode $file)
if [ $? != 0 ]; then
  echo "$save" | color
  remove_aux_files
  exit 1
fi

# Step 4: recompile with latex (again)
echo "${green}Step 4/4: running pdflatex${reset}"
save=$(texfot pdflatex -interaction=nonstopmode $file)
if [ $? != 0 ]; then
  echo "$save" | color
  remove_aux_files
  exit 1
fi
echo "$save" | color

# Remove files and open document
remove_aux_files
evince $file.pdf &> /dev/null &
